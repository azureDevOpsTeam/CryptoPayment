@model PaymentStatusViewModel
@{
    ViewData["Title"] = "وضعیت پرداخت";
}

<div class="text-center mb-4">
    <h4>
        <i class="bi bi-clock-history me-2"></i>
        وضعیت پرداخت
    </h4>
</div>

@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @ViewBag.Error
    </div>
}
else
{
    <div class="row">
        <div class="col-12">
            <!-- Payment Status -->
            <div class="alert alert-@Model.StatusCssClass d-flex align-items-center mb-4" role="alert">
                <i class="bi bi-@(Model.IsCompleted ? "check-circle" : Model.IsExpired ? "x-circle" : "clock") me-2"></i>
                <strong>وضعیت: @Model.StatusDisplayName</strong>
            </div>

            <!-- Payment Details -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-info-circle me-2"></i>
                        جزئیات پرداخت
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <strong>مقدار:</strong> @Model.Amount.ToString("N8") @Model.Currency
                        </div>
                        <div class="col-sm-6">
                            <strong>شبکه:</strong> 
                            <span class="network-badge network-@(Model.Network.ToString().ToLower())">
                                @Model.NetworkDisplayName
                            </span>
                        </div>
                    </div>
                    @if (Model.ReceivedAmount.HasValue)
                    {
                        <div class="row mt-2">
                            <div class="col-sm-6">
                                <strong>مقدار دریافتی:</strong> @Model.ReceivedAmount.Value.ToString("N8") @Model.Currency
                            </div>
                            @if (!string.IsNullOrEmpty(Model.TransactionHash))
                            {
                                <div class="col-sm-6">
                                    <strong>هش تراکنش:</strong>
                                    <small class="font-monospace">@Model.TransactionHash</small>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>

            @if (Model.IsPending)
            {
                <!-- Timer -->
                <div class="text-center mb-4">
                    <div class="timer" id="timer">
                        <i class="bi bi-stopwatch me-2"></i>
                        <span id="timeRemaining">@((int)Model.TimeRemaining.TotalMinutes):@Model.TimeRemaining.Seconds.ToString("D2")</span>
                    </div>
                    <small class="text-muted">زمان باقی‌مانده برای پرداخت</small>
                </div>

                <!-- Wallet Address -->
                <div class="mb-4">
                    <label class="form-label">
                        <i class="bi bi-wallet2 me-2"></i>
                        آدرس کیف پول برای واریز
                    </label>
                    <div class="wallet-address">
                        <div class="d-flex justify-content-between align-items-center">
                            <span id="walletAddress">@Model.WalletAddress</span>
                            <button type="button" class="btn btn-outline-primary btn-sm" onclick="copyToClipboard()">
                                <i class="bi bi-clipboard"></i>
                            </button>
                        </div>
                    </div>
                    <div class="form-text">
                        <i class="bi bi-info-circle me-1"></i>
                        این آدرس فقط برای این پرداخت اختصاص داده شده است
                    </div>
                </div>

                <!-- QR Code Placeholder -->
                <div class="qr-code mb-4">
                    <div class="border rounded p-4 bg-light">
                        <i class="bi bi-qr-code" style="font-size: 100px; color: #6c757d;"></i>
                        <p class="text-muted mt-2">QR Code آدرس کیف پول</p>
                        <small class="text-muted">برای اسکن با کیف پول موبایل</small>
                    </div>
                </div>

                <!-- Instructions -->
                <div class="alert alert-info">
                    <h6><i class="bi bi-lightbulb me-2"></i>راهنمای پرداخت:</h6>
                    <ol class="mb-0">
                        <li>آدرس کیف پول بالا را کپی کنید</li>
                        <li>به کیف پول خود بروید و @Model.Amount.ToString("N8") @Model.Currency را به این آدرس در شبکه @Model.NetworkDisplayName ارسال کنید</li>
                        <li>پس از ارسال، تراکنش به صورت خودکار بررسی خواهد شد</li>
                        <li>در صورت موفقیت، پیغام تأیید نمایش داده می‌شود</li>
                    </ol>
                </div>
            }
            else if (Model.IsCompleted)
            {
                <div class="alert alert-success text-center">
                    <i class="bi bi-check-circle" style="font-size: 48px;"></i>
                    <h5 class="mt-3">پرداخت با موفقیت انجام شد!</h5>
                    <p class="mb-0">تراکنش شما تأیید شده است.</p>
                    @if (Model.CompletedAt.HasValue)
                    {
                        <small class="text-muted d-block mt-2">
                            زمان تکمیل: @Model.CompletedAt.Value.ToString("yyyy/MM/dd HH:mm:ss")
                        </small>
                    }
                </div>
            }
            else if (Model.IsExpired)
            {
                <div class="alert alert-danger text-center">
                    <i class="bi bi-x-circle" style="font-size: 48px;"></i>
                    <h5 class="mt-3">زمان پرداخت به پایان رسیده است</h5>
                    <p class="mb-0">لطفاً پرداخت جدیدی ایجاد کنید.</p>
                </div>
                
                <div class="text-center">
                    <a href="@Url.Action("Index")" class="btn btn-primary">
                        <i class="bi bi-arrow-clockwise me-2"></i>
                        ایجاد پرداخت جدید
                    </a>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script>
        let paymentId = '@Model.PaymentId';
        let timeRemaining = @((int)Model.TimeRemaining.TotalSeconds);
        let timerInterval;
        let statusCheckInterval;

        $(document).ready(function() {
            @if (Model.IsPending)
            {
                <text>
                // Start timer
                startTimer();
                
                // Start status checking
                statusCheckInterval = setInterval(checkPaymentStatus, 10000); // Check every 10 seconds
                </text>
            }
        });

        function startTimer() {
            timerInterval = setInterval(function() {
                timeRemaining--;
                
                if (timeRemaining <= 0) {
                    clearInterval(timerInterval);
                    clearInterval(statusCheckInterval);
                    location.reload(); // Reload to show expired status
                    return;
                }
                
                let minutes = Math.floor(timeRemaining / 60);
                let seconds = timeRemaining % 60;
                
                $('#timeRemaining').text(minutes + ':' + seconds.toString().padStart(2, '0'));
            }, 1000);
        }

        function checkPaymentStatus() {
            $.ajax({
                url: '@Url.Action("CheckStatus")',
                type: 'GET',
                data: { paymentId: paymentId },
                success: function(response) {
                    if (response.success) {
                        if (response.status === 'Completed') {
                            clearInterval(timerInterval);
                            clearInterval(statusCheckInterval);
                            location.reload(); // Reload to show success status
                        } else if (response.status === 'Expired') {
                            clearInterval(timerInterval);
                            clearInterval(statusCheckInterval);
                            location.reload(); // Reload to show expired status
                        }
                        
                        // Update time remaining from server
                        if (response.timeRemaining > 0) {
                            timeRemaining = Math.floor(response.timeRemaining);
                        }
                    }
                },
                error: function() {
                    console.log('Error checking payment status');
                }
            });
        }

        function copyToClipboard() {
            let walletAddress = document.getElementById('walletAddress').textContent;
            navigator.clipboard.writeText(walletAddress).then(function() {
                // Show success message
                let button = event.target.closest('button');
                let originalHtml = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check"></i>';
                button.classList.remove('btn-outline-primary');
                button.classList.add('btn-success');
                
                setTimeout(function() {
                    button.innerHTML = originalHtml;
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-primary');
                }, 2000);
            }).catch(function() {
                alert('خطا در کپی کردن آدرس');
            });
        }
    </script>
}